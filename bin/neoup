#!/usr/bin/env dash

set -u

die() {
    printf >&2 '%s: %s\n' "${0##*/}" "$1"
    exit 1
}

BUILD_ROOT="${HOME}/Downloads/src"
BUILD_FULL="${BUILD_ROOT}/neovim"
GIT_REPO='https://github.com/neovim/neovim.git'
INSTALL_DIR="${HOME}/local/neovim"

for DEP in ninja cmake gettext curl git; do
    hash "$DEP" 2>/dev/null || die "$(printf 'missing requirement: %s' "$DEP")"
done

if [ ! -d "$BUILD_ROOT" ]; then
    mkdir -p "$BUILD_ROOT" || die "$(printf '`mkdir -p %s` failed' "$BUILD_ROOT")"
fi
cd "$BUILD_ROOT" || die "$(printf '`cd %s` failed' "$BUILD_ROOT")"

if [ ! -d "$BUILD_FULL" ]; then
    git clone "$GIT_REPO" || die "$(printf '`git clone %s` failed' "$GIT_REPO")"
fi
cd "$BUILD_FULL" || die "$(printf '`cd %s` failed' "$BUILD_FULL")"
git pull || die '`git pull` failed'

if [ "${1:-}" = "--clean" ]; then
    make distclean || die '`make distclean` failed'
fi
LUA_PATH='' LUA_CPATH='' make CMAKE_BUILD_TYPE=Release \
    CMAKE_INSTALL_PREFIX="$INSTALL_DIR" || die '`make` failed'
rm -rf "$INSTALL_DIR" || die "$(printf '`rm -rf %s` failed' "$INSTALL_DIR")"
LUA_PATH='' LUA_CPATH='' make install || die '`make install` failed'

# Update plugins and their helptags.
pluggo -config="${HOME}"/.config/nvim/nvim-pluggo.json || die 'pluggo failed'
nvim --headless -c 'helptags ALL | quit' || die 'failed to update helptag files'

# vim: set ts=8 sw=4 ts=4 tw=0 et ft=sh :
