set encoding=utf-8
scriptencoding utf-8

" You need to set the background *before* you enable syntax.
" See :help 'background'.
syntax enable
filetype plugin indent on
set backspace=indent,eol,start
set history=500
set scrolloff=0     " No breathing room
set number
set relativenumber
set mouse=          " No mouse capture

set ruler           " Show the cursor position all the time
set showcmd
set showmode
set ttimeout
set ttimeoutlen=100

if &shell =~# 'fish$'
    set shell=bash
endif

set wrap linebreak breakindent
set showbreak=↪
set list
set listchars=tab:»·,eol:↲,nbsp:␣,trail:•,extends:⟩,precedes:⟨
set autoindent
" t = autowrap text using textwidth
" c = autowrap comments using textwidth
" q = allow formatting of comments with "gq"
" n = recognize numbered lists for formatting purposes
" 1 = do not break line after a one-letter word
set formatoptions=tcqn1
set tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab
set foldmarker={{{,}}}
set foldlevel=0
set foldmethod=marker

set laststatus=2        " Always put a status line in
set showtabline=1       " Show a tabbar only if there are at least two tabs

set ignorecase          " Ignore case in searches
set smartcase           " But care about case if I enter capitals
set gdefault            " Subsitutions are global ('g') by default
set incsearch           " Do incremental searching
set nohlsearch          " Do not hightlight all matches in a search
set conceallevel=0      " Conceal is evil

set backup
set undofile
if has('nvim')
    set backupdir=$HOME/.nvim_backups,/tmp
    set directory=/tmp,$HOME/.nvim_backups
    set undodir=$HOME/.nvim_undo,/tmp
else
    set backupdir=$HOME/.vim_backups,/tmp
    set directory=/tmp,$HOME/.vim_backups
    set undodir=$HOME/.vim_undo,/tmp
    if has('syntax') && has('eval')
        packadd! matchit
    endif
endif

if executable('rg')
    set grepprg=rg\ --vimgrep\ --smart-case\ --hidden
    set grepformat=%f:%l:%c:%m
endif

" Use bash-style tab completion:
" first tab shows longest common string, and subsequent tabs list all choices
set wildmode=longest,list
set wildignore+=*.o,*.obj,*~
set wildignore+=*DS_Store*
set wildignore+=*.png,*.jpg,*.jpeg,*.gif,*.pdf

set hidden              " No warning, but keep buffers with changes
set title               " Set window title
set shortmess=atIF      " Abbreviate and truncate messages; no intro screen;
                        " don’t display file information on write

set statusline=[%<%.20f][%{&fenc==''?&enc:&fenc}]%y%m%r%h
set statusline+=%=%([Line:\ %l\ Column:\ %c\ %P]%)

set termguicolors
set background=light
set colorcolumn=+1
colorscheme minimum

if has('gui')
    set guicursor=n-v-c-sm:block-blinkwait900-blinkoff900-blinkon900,i-ci-ve:ver25-Cursor-blinkwait900-blinkoff900-blinkon900
    set guifont=Consolas:h16
    set rows=40 columns=90
endif

set printoptions:paper:letter,header:0,syntax:n
set printfont:Consolas

set iskeyword+=-

let g:mapleader=' '
let g:localleader=' '

" Put things here that eventually belong in vim-dotfiles if I keep them.
let chars = {
        \ '"': v:true,
        \ "'": v:true,
        \ ')': v:true,
        \ '}': v:true,
        \ }
inoremap <silent> <expr> <C-CR>
        \ get(chars, strpart(getline('.'), col('.')-1, 1), v:false)
        \ ? '<Right>'
        \ : '<C-CR>'
